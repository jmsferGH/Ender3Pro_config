# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include lcd.cfg]

[include neopixel.cfg]

[include macros.cfg]

[pause_resume]

[display_status]

[virtual_sdcard]
path: ~/printer_data/gcodes

# [gcode_macro M300]
# gcode:
#     # Use a default 1kHz tone if S is omitted.
#     {% set S = params.S|default(1000)|int %}
#     # Use a 10ms duration is P is omitted.
#     {% set P = params.P|default(100)|int %}
#     SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
#     G4 P{P}
#     SET_PIN PIN=BEEPER_pin VALUE=0


[delayed_gcode Start_Tone] ###The Actual Start Tone
gcode:
  M300 P1 S1

initial_duration: 10.0

[gcode_macro SONG_STARWARS_IMP]
gcode:
	M300 S1174 P401
	M300 S1174 P401
	M300 S1174 P401
	M300 S466 P267
	M300 S1396 P133
	M300 S1174 P401
	M300 S466 P267
	M300 S1396 P133
	M300 S1174 P803


# [gcode_macro PLAY_TONE]
# gcode:
#    {% set l = params.L|default(0)|int %}

#    {% if l == 1 %} ; play first tone #Here we go
#      M300 P184 S392
#      M300 P184 S523
#      M300 P187 S659
#      M300 P417 S784
#      M300 P139 S659
#      M300 P400 S784  

#    {% elif l == 2 %} #play second tone #Mario Death
#      M300 P146 S494
#      M300 P97 S698
#      M300 P157 S0
#      M300 P132 S698
#      M300 P174 S698
#      M300 P168 S659
#      M300 P176 S587
#      M300 P134 S523
#      M300 P95 S330
#      M300 P31 S0
   
#   {% elif l == 3 %} #play second tone #MarioWorld start theme
#     M300 P100 S659
#     M300 P200 S659
#     M300 P99 S659
#     M300 P101 S0
#     M300 P100 S523
#     M300 P99 S659
#     M300 P101 S0
#     M300 P199 S784
#     M300 P201 S0
#     M300 P199 S392

#    {% elif l == 4 %} #play third tone #Ode to joy
#     M300 P353 S330
#     M300 P353 S330
#     M300 P353 S349
#     M300 P353 S392
#     M300 P353 S392
#     M300 P353 S349
#     M300 P353 S330
#     M300 P353 S294
#     M300 P353 S262
#     M300 P353 S262
#     M300 P353 S294
#     M300 P353 S330
#     M300 P529 S330
#     M300 P176 S294
#     M300 P706 S294

#    {% else %}
#      M300 P100 S0 #play nothing
#    {% endif %} 
[gcode_macro M300]
gcode:  
	{% set S = params.S|default(1000)|int %} ; S sets the tone frequency
	{% set P = params.P|default(100)|int %} ; P sets the tone duration
	{% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
	{% if S <= 0 %} ; dont divide through zero
	{% set F = 1 %}
	{% set L = 0 %}
	{% elif S >= 10000 %} ;max frequency set to 10kHz
	{% set F = 0 %}
	{% else %}
	{% set F = 1/S %} ;convert frequency to seconds 
	{% endif %}
	SET_PIN PIN=BEEPER_pin VALUE={L} CYCLE_TIME={F} ;Play tone
	G4 P{P} ;tone duration
 	SET_PIN PIN=BEEPER_pin VALUE=0

# [gcode_macro M300]
# gcode:  
#   {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
#   {% set P = params.P|default(100)|int %} ; P sets the tone duration
#   {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
#   {% if S <= 0 %} ; dont divide through zero
#   {% set F = 1 %}
#   {% set L = 0 %}
#   {% elif S >= 10000 %} ;max frequency set to 10kHz
#   {% set F = 0 %}
#   {% else %}
#   {% set F = 1/S %} ;convert frequency to seconds 
#   {% endif %}
#     SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
#   G4 P{P} ;tone duration
#     SET_PIN PIN=BEEPER_Pin VALUE=0

  

[bltouch]
stow_on_each_sample: true
probe_with_touch_mode: false
sensor_pin: ^PC14
control_pin: PA1
pin_move_time: 0.5
pin_up_touch_mode_reports_triggered: false
x_offset: -47
y_offset: -7
#z_offset:  0
speed: 3.0
samples: 2
samples_result: median
sample_retract_dist: 6.0
samples_tolerance: 0.05
samples_tolerance_retries: 3

[bed_mesh]
speed: 80
horizontal_move_z: 7
##### scan_overshoot: 15
mesh_min: 10, 10 #this will likely be a good starting pos
mesh_max: 203, 220  #this will need to be calculated
probe_count: 5,5 #number of x,y probing points
mesh_pps: 2,2 #number of points to interpret between each probing point
fade_start: 1 #height in millimeters to begin fading out the applied effect of the mesh
fade_end: 10 #height in millimeters to end the applied effect of the mesh. If you want to disable fade make this value lower than the value of fade_start
fade_target: 0
algorithm: bicubic


[safe_z_home]
home_xy_position: 120,120 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 255
homing_speed: 70

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 70

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -2

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
gear_ratio: 3:1
microsteps: 16
full_steps_per_rotation : 200
rotation_distance: 23
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
min_temp: 0
max_temp: 300
max_extrude_only_distance: 100.0
pressure_advance : 0.07


[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
min_temp: 0
max_temp: 130

[heater_fan controller_fan]
pin: PB15
heater: heater_bed
heater_temp: 45.0

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/ttyAMA0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}



  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

# See the sample-lcd.cfg file for definitions of common LCD displays.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 1.234
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.030
#*# pid_ki = 2.022
#*# pid_kd = 111.486
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.480
#*# pid_ki = 1.819
#*# pid_kd = 762.492
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.147500, 0.110000, 0.105000, 0.048750, 0.065000
#*# 	  0.065000, 0.048750, 0.027500, -0.015000, -0.016250
#*# 	  -0.015000, -0.007500, -0.008750, -0.052500, -0.052500
#*# 	  -0.032500, -0.051250, -0.048750, -0.058750, -0.050000
#*# 	  -0.005000, -0.052500, -0.012500, -0.055000, -0.010000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 203.0
#*# min_y = 10.0
#*# max_y = 220.0
